{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAOC,SAASC,cAAc,QAuBpC,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAAKC,GACvBC,YAAW,WACaC,KAAKC,SAAW,GAGpCJ,EAAI,oBAAmCK,OAAfR,EAAS,QAAYQ,OAANP,EAAM,OAE7CG,EAAI,oBAAmCI,OAAfR,EAAS,QAAYQ,OAANP,EAAM,M,GAE9CA,E,IAhCPL,EAAKa,iBAAiB,UAEtB,SAAkBC,GAChBA,EAAMC,iBACN,IAAIC,EAAKhB,EAAKK,MAAMY,MACpBD,EAAKE,OAAOF,GACZ,IAAMG,EAAOnB,EAAKmB,KAAKF,MACjBG,EAASpB,EAAKoB,OAAOH,MAE3B,IAAKI,EAAI,EAAGA,GAAKD,EAAQC,GAAK,EAC5BL,GAAUG,EAAKE,EACflB,EAAckB,EAAGL,GACdM,MAAK,SAAAL,GACJnB,EAAAyB,OAAOC,QAAQP,E,IAEhBQ,OAAM,SAAAC,GACL5B,EAAAyB,OAAOI,QAAQD,E","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst form = document.querySelector('form');\nform.addEventListener('submit', onSubmit)\n\nfunction onSubmit(event) {\n  event.preventDefault();\n  let ms = form.delay.value;\n  ms = Number(ms);\n  const step = form.step.value;\n  const amount = form.amount.value;\n\n  for (i = 1; i <= amount; i += 1) {\n    ms = ms + step*i ;\n    createPromise(i, ms)\n      .then(value => {\n        Notify.success(value);\n      })\n      .catch(error => {\n        Notify.failure(error);\n      });\n  }\n  \n}\n\nfunction createPromise(position, delay) {\n  return new Promise((res, rej) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      \n      if (shouldResolve) {\n        res(`Fulfield promise ${position} in ${delay}ms`);\n      } else {\n        rej(`Rejected promise ${position} in ${delay}ms`);\n      }\n    }, delay)\n   \n  });\n}\n\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","res","rej","setTimeout","Math","random","concat","addEventListener","event","preventDefault","ms","value","Number","step","amount","i","then","Notify","success","catch","error","failure"],"version":3,"file":"03-promises.965462e3.js.map"}