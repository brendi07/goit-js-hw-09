{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAOC,SAASC,cAAc,QAuBpC,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAAKC,KACvBC,YAAW,KACaC,KAAKC,SAAW,GAGpCJ,EAAI,oBAAoBH,QAAeC,OAEvCG,EAAI,oBAAoBJ,QAAeC,MAAU,GAElDA,EAAM,G,CAhCbL,EAAKY,iBAAiB,UAEtB,SAAkBC,GAChBA,EAAMC,iBACN,IAAIC,EAAKf,EAAKK,MAAMW,MACpBD,EAAKE,OAAOF,GACZ,MAAMG,EAAOlB,EAAKkB,KAAKF,MACjBG,EAASnB,EAAKmB,OAAOH,MAE3B,IAAM,IAAII,EAAI,EAAGA,GAAKD,EAAQC,GAAK,EACjCL,GAAUG,EAAKE,EACfjB,EAAciB,EAAGL,GACdM,MAAKL,IACJlB,EAAAwB,OAAOC,QAAQP,EAAM,IAEtBQ,OAAMC,IACL3B,EAAAwB,OAAOI,QAAQD,EAAM,G","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst form = document.querySelector('form');\nform.addEventListener('submit', onSubmit)\n\nfunction onSubmit(event) {\n  event.preventDefault();\n  let ms = form.delay.value;\n  ms = Number(ms);\n  const step = form.step.value;\n  const amount = form.amount.value;\n\n  for ( let i = 1; i <= amount; i += 1) {\n    ms = ms + step*i ;\n    createPromise(i, ms)\n      .then(value => {\n        Notify.success(value);\n      })\n      .catch(error => {\n        Notify.failure(error);\n      });\n  }\n  \n}\n\nfunction createPromise(position, delay) {\n  return new Promise((res, rej) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      \n      if (shouldResolve) {\n        res(`Fulfield promise ${position} in ${delay}ms`);\n      } else {\n        rej(`Rejected promise ${position} in ${delay}ms`);\n      }\n    }, delay)\n   \n  });\n}\n\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$createPromise","position","delay","Promise","res","rej","setTimeout","Math","random","addEventListener","event","preventDefault","ms","value","Number","step","amount","i","then","Notify","success","catch","error","failure"],"version":3,"file":"03-promises.bea87200.js.map"}